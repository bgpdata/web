apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: core-db
spec:
  replicas: 1
  selector:
    matchLabels:
      app: core-db
  serviceName: core-db
  template:
    metadata:
      labels:
        app: core-db
    spec:
      restartPolicy: Always
      containers:
      - name: core-db
        image: timescale/timescaledb:latest-pg13
        livenessProbe:
          exec:
            command:
            - pg_isready
            - -U
            - core
            - -d
            - default
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 5
        readinessProbe:
          exec:
            command:
            - pg_isready
            - -U
            - core
            - -d
            - default
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 5
        resources:
          requests:
            cpu: {{ .Values."core-services".database.resources.requests.cpu }}
            memory: {{ .Values."core-services".database.resources.requests.memory }}
          limits:
            cpu: {{ .Values."core-services".database.resources.limits.cpu }}
            memory: {{ .Values."core-services".database.resources.limits.memory }}
        ports:
        - containerPort: 5432
        env:
        - name: POSTGRES_USER
          value: "core"
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: core-db-secret
              key: password
        - name: POSTGRES_DB
          value: "default"
        volumeMounts:
        - name: core-db-data
          mountPath: /var/lib/postgresql/data
  volumeClaimTemplates:
  - metadata:
      name: core-db-data
    spec:
      accessModes: ["ReadWriteOnce"]
      resources:
        requests:
          storage: {{ .Values."core-services".database.resources.storage.size }}
