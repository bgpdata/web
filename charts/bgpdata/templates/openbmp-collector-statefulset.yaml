apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: core-openbmp-collectors
spec:
  serviceName: "core-openbmp-collectors"
  replicas: 1
  selector:
    matchLabels:
      app: core-openbmp-collectors
  template:
    metadata:
      labels:
        app: core-openbmp-collectors
    spec:
      restartPolicy: Always
      securityContext:
        sysctls:
        - name: net.ipv4.tcp_keepalive_intvl
          value: "30"
        - name: net.ipv4.tcp_keepalive_probes
          value: "5"
        - name: net.ipv4.tcp_keepalive_time
          value: "180"
      containers:
        {{- range $index, $collector := .Values.core.collectors.hosts.ris }}
        - name: openbmp-collector-ris-{{ $collector.name }}
          image: openbmp/collector:2.2.3
          resources:
            requests:
              cpu: {{ $.Values.openbmp.collectors.resources.requests.cpu }}
              memory: {{ $.Values.openbmp.collectors.resources.requests.memory }}
            limits:
              cpu: {{ $.Values.openbmp.collectors.resources.limits.cpu }}
              memory: {{ $.Values.openbmp.collectors.resources.limits.memory }}
          env:
          - name: KAFKA_FQDN
            value: "openbmp-kafka-service:29092"
          - name: UNIQUE_COLLECTOR
            value: {{ $collector.collectors }}
          livenessProbe:
            tcpSocket:
              port: 5000
            periodSeconds: 30
            timeoutSeconds: 10
            failureThreshold: 3
          readinessProbe:
            tcpSocket:
              port: 5000
            periodSeconds: 30
            timeoutSeconds: 10
            failureThreshold: 3
        {{- end }}

        {{- range $index, $collector := .Values.core.collectors.hosts.routeviews }}
        - name: openbmp-collector-routeviews-{{ $collector.name }}
          image: openbmp/collector:2.2.3
          resources:
            requests:
              cpu: {{ $.Values.openbmp.collectors.resources.requests.cpu }}
              memory: {{ $.Values.openbmp.collectors.resources.requests.memory }}
            limits:
              cpu: {{ $.Values.openbmp.collectors.resources.limits.cpu }}
              memory: {{ $.Values.openbmp.collectors.resources.limits.memory }}
          env:
          - name: KAFKA_FQDN
            value: "openbmp-kafka-service:29092"
          - name: UNIQUE_COLLECTOR
            value: {{ $collector.collectors }}
          livenessProbe:
            tcpSocket:
              port: 5000
            periodSeconds: 30
            timeoutSeconds: 10
            failureThreshold: 3
          readinessProbe:
            tcpSocket:
              port: 5000
            periodSeconds: 30
            timeoutSeconds: 10
            failureThreshold: 3
        {{- end }}
      volumes:
      - name: core-openbmp-data
        emptyDir: {}
  volumeClaimTemplates:
  - metadata:
      name: core-openbmp-data
    spec:
      accessModes: ["ReadWriteOnce"]
      resources:
        requests:
          storage: {{ .Values.core.collectors.resources.storage.size }}