apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: openbmp-db
spec:
  replicas: {{ .Values."openbmp-services".database.replicas }}
  selector:
    matchLabels:
      app: openbmp-db
  serviceName: openbmp-db
  template:
    metadata:
      labels:
        app: openbmp-db
    spec:
      restartPolicy: Always
      securityContext:
        sysctls:
        - name: net.ipv4.tcp_keepalive_intvl
          value: "30"
        - name: net.ipv4.tcp_keepalive_probes
          value: "5"
        - name: net.ipv4.tcp_keepalive_time
          value: "180"
      containers:
      - name: openbmp-db
        image: openbmp/postgres:2.2.1
        livenessProbe:
          exec:
            command:
            - pg_isready
            - -U
            - openbmp
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 5
        readinessProbe:
          exec:
            command:
            - pg_isready
            - -U
            - openbmp
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 5
        resources:
          requests:
            cpu: {{ .Values."openbmp-services".database.resources.requests.cpu }}
            memory: {{ .Values."openbmp-services".database.resources.requests.memory }}
          limits:
            cpu: {{ .Values."openbmp-services".database.resources.limits.cpu }}
            memory: {{ .Values."openbmp-services".database.resources.limits.memory }}
        ports:
        - containerPort: 5432
        env:
        - name: POSTGRES_USER
          value: "openbmp"
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: openbmp-db-secret
              key: password
        - name: POSTGRES_DB
          value: "openbmp"
        - name: PATRONI_SCOPE
          value: openbmp-cluster
        - name: PATRONI_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: PATRONI_KUBERNETES_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: PATRONI_KUBERNETES_POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: PATRONI_KUBERNETES_PORTS
          value: '[{"name": "postgresql", "port": 5432}]'
        volumeMounts:
        - name: openbmp-db-data
          mountPath: /var/lib/postgresql/data
      initContainers:
      - name: install-patroni
        image: python:3.9-slim
        command:
        - /bin/bash
        - -c
        - |
          apt-get update && apt-get install -y python3-pip
          pip install patroni[kubernetes]
          cp -r /usr/local/lib/python3.9/site-packages/* /patroni-lib/
        volumeMounts:
        - name: patroni-lib
          mountPath: /patroni-lib
  volumeClaimTemplates:
  - metadata:
      name: openbmp-db-data
    spec:
      accessModes: ["ReadWriteOnce"]
      resources:
        requests:
          storage: {{ .Values."openbmp-services".database.resources.storage.size }}
  volumes:
  - name: patroni-lib
    emptyDir: {}
