apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: openbmp-db
spec:
  replicas: 1
  selector:
    matchLabels:
      app: openbmp-db
  serviceName: openbmp-db
  template:
    metadata:
      labels:
        app: openbmp-db
    spec:
      restartPolicy: Always
      securityContext:
        sysctls:
        - name: net.ipv4.tcp_keepalive_intvl
          value: "30"
        - name: net.ipv4.tcp_keepalive_probes
          value: "5"
        - name: net.ipv4.tcp_keepalive_time
          value: "180"
      containers:
      - name: openbmp-db
        image: openbmp/postgres:2.2.1
        livenessProbe:
          exec:
            command:
            - pg_isready
            - -U
            - openbmp
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 5
        readinessProbe:
          exec:
            command:
            - pg_isready
            - -U
            - openbmp
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 5
        resources:
          requests:
            cpu: {{ .Values.openbmp.database.resources.requests.cpu }}
            memory: {{ .Values.openbmp.database.resources.requests.memory }}
          limits:
            cpu: {{ .Values.openbmp.database.resources.limits.cpu }}
            memory: {{ .Values.openbmp.database.resources.limits.memory }}
        ports:
        - containerPort: 5432
        env:
        - name: POSTGRES_USER
          value: "openbmp"
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: openbmp-db-secret
              key: password
        - name: POSTGRES_DB
          value: "openbmp"
        volumeMounts:
        - name: openbmp-db-data
          mountPath: /var/lib/postgresql/data
        volumes:
        - name: openbmp-db-data
          emptyDir:
            medium: "Memory" # We don't need persistent storage for the database
            sizeLimit: {{ .Values.openbmp.database.resources.storage.size }}
