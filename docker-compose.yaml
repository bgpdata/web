services:
    # PostgreSQL service for your app
    postgres:
        image: timescale/timescaledb:latest-pg13
        container_name: postgres
        restart: always
        healthcheck:
            test: ["CMD-SHELL", "pg_isready -U postgres"]
            interval: 30s
            timeout: 10s
            retries: 5
        environment:
            POSTGRES_USER: postgres
            POSTGRES_PASSWORD: postgres
            POSTGRES_DB: default
        ports:
            - "5432:5432"
        volumes:
            - /Volumes/SDCARD/postgres_data:/var/lib/postgresql/data

    # Flask application service
    web:
        build: .
        container_name: web
        healthcheck:
            test: ["CMD", "curl", "-f", "http://localhost:8080"]
            interval: 30s
            timeout: 10s
            retries: 3
            start_period: 40s
        restart: always
        environment:
            - POSTGRESQL_DATABASE=postgresql+asyncpg://postgres:postgres@postgres:5432/default
            - POSTMARK_API_KEY=your-postmark-api-key
            - SECRET_KEY=your-flask-secret-key
            - ENVIRONMENT=development
        ports:
            - "8080:8080"
        depends_on:
            postgres:
                condition: service_healthy
        working_dir: /app
        volumes:
            - .:/app
        entrypoint: >
            /bin/sh -c "alembic upgrade head && gunicorn --bind 0.0.0.0:8080 --workers 4 --worker-class uvicorn.workers.UvicornWorker --reload --log-level info --access-logfile - --error-logfile - 'app:asgi_app'"

    # RIS stream consumer service
    ris:
        build: .
        container_name: ris
        environment:
            - POSTGRESQL_DATABASE=postgresql+asyncpg://postgres:postgres@postgres:5432/default
            - SASL_KAFKA_USERNAME=public
            - SASL_KAFKA_PASSWORD=public
        depends_on:
            web:
                condition: service_healthy
            postgres:
                condition: service_healthy
        working_dir: /app
        volumes:
            - .:/app
        entrypoint: >
            python services/ris.py

# Define volumes
volumes:
    pg_data:
